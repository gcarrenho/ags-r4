package com.tesis.ags_r4;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;

public class ExpandableListAdapter extends BaseExpandableListAdapter{

	private Context context;
	private List<String> listCat; // header titles
	// child data in format of header title, child title
	private Map<String, List<Lugar>> listCatChild;
	
	public ExpandableListAdapter(Context context, List<String> listCat,
        Map<String, List<Lugar>> lugaresGroups){
		this.context=context;
		this.listCat=listCat;
		this.listCatChild=lugaresGroups;
	}
	    
	@Override
	public int getGroupCount() {
		return this.listCat.size();
	}

	@Override
	public int getChildrenCount(int groupPosition) {
		return this.listCatChild.size();
	}

	@Override
	public Object getGroup(int groupPosition) {
		return this.listCat.get(groupPosition);
	}

	@Override
	public Object getChild(int groupPosition, int childPosition) {
		return this.listCatChild.get(this.listCat.get(groupPosition)).get(childPosition);
	}

	@Override
	public long getGroupId(int groupPosition) {
		return groupPosition;
	}

	@Override
	public long getChildId(int groupPosition, int childPosition) {
		return childPosition;
	}

	@Override
	public boolean hasStableIds() {
		return false;
	}

	@Override
	public View getGroupView(int groupPosition, boolean isExpanded,
			View convertView, ViewGroup parent) {
	        String headerTitle = (String) getGroup(groupPosition);
	        
	        //aca traer de la base de datos las cat y rellenar..
	       /* if (convertView == null) {
	            LayoutInflater infalInflater = (LayoutInflater) this.context
	                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
	            convertView = infalInflater.inflate(R.layout.list_group, null);
	        }
	 
	        TextView lblListHeader = (TextView) convertView
	                .findViewById(R.id.lblListHeader);
	        lblListHeader.setTypeface(null, Typeface.BOLD);
	        lblListHeader.setText(headerTitle);*/
	 
	        return convertView;
	}

	@Override
	public View getChildView(int groupPosition, int childPosition,
			boolean isLastChild, View convertView, ViewGroup parent) {
			 
	        final String childText = (String) getChild(groupPosition, childPosition);
	        //aca traer la lista de todos los lugares
	      /*  if (convertView == null) {
	            LayoutInflater infalInflater = (LayoutInflater) this._context
	                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
	            convertView = infalInflater.inflate(R.layout.list_item, null);
	        }
	 
	        TextView txtListChild = (TextView) convertView
	                .findViewById(R.id.lblListItem);
	 
	        txtListChild.setText(childText);*/
	        return convertView;
	}

	@Override
	public boolean isChildSelectable(int groupPosition, int childPosition) {
		return true;
	}

}
