package com.tesis.ags_r4;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import com.tesis.ags_r4.R;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ExpandableListView;
import android.widget.ExpandableListView.OnChildClickListener;
import android.widget.Toast;
import android.view.View;

public class SelectCatActivity extends Activity{

	//private LugaresDbHelper lugarDb=new LugaresDbHelper(this,"lugares",null,1);
	private Map<String, List<String>> collLugares;
	List<String> listCat;
    List<String> listLugares;
    //Map<String, List<String>> laptopCollection;
	private ExpandableListAdapter listAdapter;
	private ExpandableListView expListView;
	private Lugar lugarBd;

	public static final String APP_EXIT_KEY = "APP_EXIT_KEY";
	//private HashMap<String, List<Lugar>> listCatChild;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		boolean exit = false;
		Intent intent = getIntent();
		if(intent != null){
			
			if(intent.getExtras() != null && intent.getExtras().containsKey(APP_EXIT_KEY)){
				exit = true;
			}
		}
		Window window = getWindow();

		requestWindowFeature(Window.FEATURE_NO_TITLE);
		lugarBd= new Lugar(this);
		lugarBd.open();
		List<Lugar> l=lugarBd.getAllLugares();
		
		/*while (!l.isEmpty()){
			parentItems.add(l.get(0).getCategoria());
			l.remove(0);
		}*/
		
		setContentView(R.layout.list_cat);
		createGroupList();
		createCollection();
		// get the listview
		expListView = (ExpandableListView) findViewById(R.id.expandableListViewCat);
		
		//expListView.setDividerHeight(2);
		//expListView.setGroupIndicator(null);
		//expListView.setClickable(true);
        
        final ExpandableListAdapter expListAdapter = new ExpandableListAdapter(
                this, listCat, collLugares);
        expListView.setAdapter(expListAdapter);
        
		String boton=intent.getStringExtra("boton");
		if(boton.equalsIgnoreCase("eliminar")){//apreto boton eliminar
			//eliminar el lugar de la base de datos..
		}else{//apreto boton editar
			//abrir el evento para editar el lugar
			 expListView.setOnChildClickListener(new OnChildClickListener() {
				 
		            public boolean onChildClick(ExpandableListView parent, View v,
		                    int groupPosition, int childPosition, long id) {
		                final String selected = (String) expListAdapter.getChild(
		                        groupPosition, childPosition);
		                Toast.makeText(getBaseContext(), selected, Toast.LENGTH_LONG)
		                        .show();
		 
		                return true;
		            }
		        });
		}
		
		//agregar los eventos de cuando escuchamos el click en el padre y en los ninos..
		//CUANDO CLIK YO TENGO QUE LLAMAR A OTR VENTA, USE LOS DATOS DE ESTE ITEM Y LOS CARGUE PARA PERMITIR 
		//EDITAROLO.
		/*expListView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {
 
            @Override
            public boolean onChildClick(ExpandableListView parent, View v,
                    int groupPosition, int childPosition, long id) {
                Toast.makeText(
                        getApplicationContext(),
                        listCat.get(groupPosition)
                                + " : "
                                + lugaresGroups.get(
                                        listCat.get(groupPosition)).get(
                                        childPosition), Toast.LENGTH_SHORT)
                        .show();
                return false;
            }
        });*/

	}
	
	  private void createGroupList() {
		  listCat = new ArrayList<String>();
		  listCat.add("HP");
		  listCat.add("Dell");
		  listCat.add("Lenovo");
		  listCat.add("Sony");
		  listCat.add("HCL");
		  listCat.add("Samsung");
	    }

	    private void createCollection() {
	        // preparing laptops collection(child)
	        String[] hpModels = { "HP Pavilion G6-2014TX", "ProBook HP 4540",
	                "HP Envy 4-1025TX" };
	        String[] hclModels = { "HCL S2101", "HCL L2102", "HCL V2002" };
	        String[] lenovoModels = { "IdeaPad Z Series", "Essential G Series",
	                "ThinkPad X Series", "Ideapad Z Series" };
	        String[] sonyModels = { "VAIO E Series", "VAIO Z Series",
	                "VAIO S Series", "VAIO YB Series" };
	        String[] dellModels = { "Inspiron", "Vostro", "XPS" };
	        String[] samsungModels = { "NP Series", "Series 5", "SF Series" };
	 
	        collLugares = new LinkedHashMap<String, List<String>>();
	 
	        for (String cat : listCat) {
	            if (cat.equals("HP")) {
	                loadChild(hpModels);
	            } else if (cat.equals("Dell"))
	                loadChild(dellModels);
	            else if (cat.equals("Sony"))
	                loadChild(sonyModels);
	            else if (cat.equals("HCL"))
	                loadChild(hclModels);
	            else if (cat.equals("Samsung"))
	                loadChild(samsungModels);
	            else
	                loadChild(lenovoModels);
	 
	            collLugares.put(cat, listLugares);
	        }
	    }
	    
	    private void loadChild(String[] laptopModels) {
	    	listLugares = new ArrayList<String>();
	        for (String model : laptopModels)
	        	listLugares.add(model);
	    }

}
